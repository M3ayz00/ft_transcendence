services:
  auth:
    container_name: auth-service
    build: ./auth-service
    restart: always
    env_file:
      - .env
    networks:
      - back-end
    ports:
      - "3000:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy

  profile:
    container_name: profile-service
    build: ./profile-service
    restart: always
    env_file:
      - .env
    networks:
      - back-end
    ports:
      - "3001:3001"
    volumes:
      - "/home/msaadidi/Desktop/trandenden/src/server/uploads:/usr/src/app/uploads"
    depends_on:
      rabbitmq:
        condition: service_healthy

  relationships:
    container_name: relationships-service
    build: ./relationships-service
    restart: always
    env_file:
      - .env
    networks:
      - back-end
    ports:
      - "3002:3002"
    depends_on:
      rabbitmq:
        condition: service_healthy

  notifications:
    container_name: notifications-service
    build: ./notifications-service
    restart: always
    env_file:
      - .env
    networks:
      - back-end
    ports:
      - "3003:3003"
    depends_on:
      rabbitmq:
        condition: service_healthy

  chat:
    container_name: chat-service
    build: ./chat-service
    restart: always
    env_file:
      - .env
    networks:
      - back-end
    ports:
      - "3004:3004"
    depends_on:
      rabbitmq:
        condition: service_healthy

  redis:
    container_name: redis
    build: ./redis
    restart: always
    networks:
      - back-end
    expose:
      - 6379
  
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: always
    env_file:
      - .env
    networks:
      - back-end
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  back-end:
    name: backend
    driver: bridge