services:
  auth:
    container_name: auth-service
    build: server/auth-service
    image: auth-service
    restart: always
    env_file:
      - ./server/.env
    networks:
      - trandenden-net
    ports:
      - "3000:3000"
    depends_on:
      rabbitmq:
        condition: service_healthy

  profile:
    container_name: profile-service
    build: server/profile-service
    image: profile-service
    restart: always
    env_file:
      - ./server/.env
    networks:
      - trandenden-net
    ports:
      - "3001:3001"
    depends_on:
      rabbitmq:
        condition: service_healthy

  friends:
    container_name: friends-service
    build: server/relationships-service
    image: friends-service
    restart: always
    env_file:
      - ./server/.env
    networks:
      - trandenden-net
    ports:
      - "3002:3002"
    depends_on:
      rabbitmq:
        condition: service_healthy

  notifications:
    container_name: notifications-service
    build: server/notifications-service
    image: notifications-service
    restart: always
    env_file:
      - ./server/.env
    networks:
      - trandenden-net
    ports:
      - "3003:3003"
    depends_on:
      rabbitmq:
        condition: service_healthy

  chat:
    container_name: chat-service
    build: server/chat-service
    image: chat-service
    restart: always
    env_file:
      - ./server/.env
    networks:
      - trandenden-net
    ports:
      - "3004:3004"
    depends_on:
      rabbitmq:
        condition: service_healthy

  dashboard:
    container_name: dashboard-service
    build: server/dashboard-service
    image: dashboard-service
    restart: always
    env_file:
      - ./server/.env
    networks:
      - trandenden-net
    ports:
      - "3005:3005"
    depends_on:
      rabbitmq:
        condition: service_healthy

  redis:
    container_name: redis
    build: server/redis
    restart: always
    networks:
      - trandenden-net
    expose:
      - 6379

  game:
    container_name: game-service
    build: server/game-service
    image: game-service
    restart: always
    env_file:
      - ./server/.env
    networks:
      - trandenden-net
    ports:
      - "5000:5000"
    volumes:
      - ./server/game-service/db/.gameData.db:/app/db/.gameData.db
    depends_on:
      rabbitmq:
        condition: service_healthy

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: always
    env_file:
      - ./server/.env
    networks:
      - trandenden-net
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    container_name: trandenden-frontend
    build: client
    image: trandenden-frontend
    ports:
      - "8080:5173"
    volumes:
      - ./client:/app
      - /app/node_modules
    working_dir: /app
    depends_on:
      - auth
      - profile
      - friends
      - notifications
      - chat
      - redis
      - rabbitmq
      - game
    env_file:
      - ./client/.env
    networks:
      - trandenden-net
    restart: always
    command: npm run dev

networks:
  trandenden-net:
    name: trandenden-net
    driver: bridge
